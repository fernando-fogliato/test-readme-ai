syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.example.springbootcrudapp.grpc";
option java_outer_classname = "DepartmentProto";

package department;

// Department service definition
service DepartmentService {
    // Basic CRUD operations
    rpc GetAllDepartments(GetAllDepartmentsRequest) returns (GetAllDepartmentsResponse);
    rpc GetDepartmentById(GetDepartmentByIdRequest) returns (GetDepartmentByIdResponse);
    rpc CreateDepartment(CreateDepartmentRequest) returns (CreateDepartmentResponse);
    rpc UpdateDepartment(UpdateDepartmentRequest) returns (UpdateDepartmentResponse);
    rpc DeleteDepartment(DeleteDepartmentRequest) returns (DeleteDepartmentResponse);
    
    // Search operations
    rpc GetDepartmentByName(GetDepartmentByNameRequest) returns (GetDepartmentByNameResponse);
    rpc SearchDepartmentsByName(SearchDepartmentsByNameRequest) returns (SearchDepartmentsByNameResponse);
    rpc SearchDepartmentsByManagerName(SearchDepartmentsByManagerNameRequest) returns (SearchDepartmentsByManagerNameResponse);
    rpc SearchDepartmentsByDescription(SearchDepartmentsByDescriptionRequest) returns (SearchDepartmentsByDescriptionResponse);
    
    // Filter operations
    rpc GetDepartmentsByLocation(GetDepartmentsByLocationRequest) returns (GetDepartmentsByLocationResponse);
    rpc GetActiveDepartments(GetActiveDepartmentsRequest) returns (GetActiveDepartmentsResponse);
    rpc GetInactiveDepartments(GetInactiveDepartmentsRequest) returns (GetInactiveDepartmentsResponse);
    rpc GetDepartmentsByBudget(GetDepartmentsByBudgetRequest) returns (GetDepartmentsByBudgetResponse);
    rpc GetDepartmentsByEmployeeCount(GetDepartmentsByEmployeeCountRequest) returns (GetDepartmentsByEmployeeCountResponse);
    rpc GetDepartmentsByManagerEmail(GetDepartmentsByManagerEmailRequest) returns (GetDepartmentsByManagerEmailResponse);
    rpc GetDepartmentsByActiveAndLocation(GetDepartmentsByActiveAndLocationRequest) returns (GetDepartmentsByActiveAndLocationResponse);
    
    // Status operations
    rpc ActivateDepartment(ActivateDepartmentRequest) returns (ActivateDepartmentResponse);
    rpc DeactivateDepartment(DeactivateDepartmentRequest) returns (DeactivateDepartmentResponse);
    
    // Update operations
    rpc UpdateDepartmentBudget(UpdateDepartmentBudgetRequest) returns (UpdateDepartmentBudgetResponse);
    rpc UpdateDepartmentEmployeeCount(UpdateDepartmentEmployeeCountRequest) returns (UpdateDepartmentEmployeeCountResponse);
}

// Department message
message Department {
    int64 id = 1;
    string name = 2;
    string description = 3;
    string manager_name = 4;
    string manager_email = 5;
    string location = 6;
    double budget = 7;
    int32 employee_count = 8;
    bool active = 9;
}

// Request/Response messages for basic CRUD operations
message GetAllDepartmentsRequest {}

message GetAllDepartmentsResponse {
    repeated Department departments = 1;
}

message GetDepartmentByIdRequest {
    int64 id = 1;
}

message GetDepartmentByIdResponse {
    Department department = 1;
    bool found = 2;
}

message CreateDepartmentRequest {
    Department department = 1;
}

message CreateDepartmentResponse {
    Department department = 1;
    bool success = 2;
    string error_message = 3;
}

message UpdateDepartmentRequest {
    int64 id = 1;
    Department department = 2;
}

message UpdateDepartmentResponse {
    Department department = 1;
    bool success = 2;
    string error_message = 3;
}

message DeleteDepartmentRequest {
    int64 id = 1;
}

message DeleteDepartmentResponse {
    bool success = 1;
    string message = 2;
}

// Request/Response messages for search operations
message GetDepartmentByNameRequest {
    string name = 1;
}

message GetDepartmentByNameResponse {
    Department department = 1;
    bool found = 2;
}

message SearchDepartmentsByNameRequest {
    string name = 1;
}

message SearchDepartmentsByNameResponse {
    repeated Department departments = 1;
}

message SearchDepartmentsByManagerNameRequest {
    string manager_name = 1;
}

message SearchDepartmentsByManagerNameResponse {
    repeated Department departments = 1;
}

message SearchDepartmentsByDescriptionRequest {
    string description = 1;
}

message SearchDepartmentsByDescriptionResponse {
    repeated Department departments = 1;
}

// Request/Response messages for filter operations
message GetDepartmentsByLocationRequest {
    string location = 1;
}

message GetDepartmentsByLocationResponse {
    repeated Department departments = 1;
}

message GetActiveDepartmentsRequest {}

message GetActiveDepartmentsResponse {
    repeated Department departments = 1;
}

message GetInactiveDepartmentsRequest {}

message GetInactiveDepartmentsResponse {
    repeated Department departments = 1;
}

message GetDepartmentsByBudgetRequest {
    double min_budget = 1;
}

message GetDepartmentsByBudgetResponse {
    repeated Department departments = 1;
}

message GetDepartmentsByEmployeeCountRequest {
    int32 min_employee_count = 1;
}

message GetDepartmentsByEmployeeCountResponse {
    repeated Department departments = 1;
}

message GetDepartmentsByManagerEmailRequest {
    string manager_email = 1;
}

message GetDepartmentsByManagerEmailResponse {
    repeated Department departments = 1;
}

message GetDepartmentsByActiveAndLocationRequest {
    bool active = 1;
    string location = 2;
}

message GetDepartmentsByActiveAndLocationResponse {
    repeated Department departments = 1;
}

// Request/Response messages for status operations
message ActivateDepartmentRequest {
    int64 id = 1;
}

message ActivateDepartmentResponse {
    Department department = 1;
    bool success = 2;
    string error_message = 3;
}

message DeactivateDepartmentRequest {
    int64 id = 1;
}

message DeactivateDepartmentResponse {
    Department department = 1;
    bool success = 2;
    string error_message = 3;
}

// Request/Response messages for update operations
message UpdateDepartmentBudgetRequest {
    int64 id = 1;
    double budget = 2;
}

message UpdateDepartmentBudgetResponse {
    Department department = 1;
    bool success = 2;
    string error_message = 3;
}

message UpdateDepartmentEmployeeCountRequest {
    int64 id = 1;
    int32 employee_count = 2;
}

message UpdateDepartmentEmployeeCountResponse {
    Department department = 1;
    bool success = 2;
    string error_message = 3;
} 